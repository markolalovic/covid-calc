{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../SimpleAutocomplete.svelte",
    "../../Subtabs.svelte",
    "../../Tabs.svelte",
    "../../WorldMap.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n\t/***\n\t* App.svelte - web app in Svelte for the user interface:\n\t  - imports data from stores.js previously created by prepare_data.py\n\t  - reactively calculates estimates for chosen parameters\n\t  - visualizations using d3\n\tCompile in order to convert to JavaScript.\n\t*/\n\n\t// data\n\timport { englishDictStore } from './store_english.js';\n\timport { chineseDictStore } from './store_chinese.js';\n\timport { spanishDictStore } from './store_spanish.js';\n\n\t// main components\n\timport CompareByAge from './CompareByAge.svelte'; // Mortality by Age\n\timport Compare from './Compare.svelte'; // Estimates in Context\n\timport WorldMap from \"./WorldMap.svelte\"; // Risks by Country\n\timport Poverty from './Poverty.svelte'; // Poverty Projections\n\timport Projections from './Projections.svelte'; // Deaths Projections\n\n\t// accessory components and imports\n\t// import * as d3 from './d3.js';\n\timport Tabs from \"./Tabs.svelte\";\n\timport Subtabs from \"./Subtabs.svelte\";\n\timport AutoComplete from \"./SimpleAutocomplete.svelte\";\n\timport { fade, fly } from 'svelte/transition';\n\timport * as animateScroll from \"svelte-scrollto\"; // for export button on:click scroll down\t\n\timport Square from \"./Square.svelte\"; // for captions legends\n\timport LineLegend from \"./LineLegend.svelte\"; // for captions legends\n\n\tconst durationIn = 10;  // transition to load components\n\tconst durationOut = 20; // transition to remove elements\n\n\n\t/***\n\t * FUNCTIONS, SWITCHES\n\t *\n\t*/\n\tfunction resetParameters() {\n\t\tpctH = 30;\t\t\t\t\t// proportion of infected case Pr(elimination) = 0\n\t\tpctH_60plus = 30; \t// proportion of people over 60 infected\n\t\tpctOfChange = 0;\t\t// proportion of increase or decrease fatality risks\n\t\tprElimTimes100 = 0; // probability of elimination case Pr(elimination) = 1\n\t\tpctU = 0;           // proportion of infected until elimination\n\t}\n\n\tfunction keepUpWithH() {\n\t\tpctH_60plus = pctH; // so that H_below60 doesn't explode\n\t\tif (pctH < pctU) {\n\t\t\tpctU = pctH;\n\t\t}\n\t}\n\n\tfunction changeLanguageTo(newLanguage) {\n\t\tlanguage = newLanguage;\n\n\t\t// change default location translation\n\t\tselectedObject = { \n\t\t\tid: 163, \n\t\t\tname: translationMap[newLanguage].countries[163].name\n\t\t}; // translations.countries[selectedId].name;\n\n\t\t// change default source object translation\n\t\tselectedSourceObject = {\n\t\t\tid: 0, source: translationMap[newLanguage].fatalityRisks[0].source,\n\t\t\tftr: [0.002, 0.006, 0.03, 0.08, 0.15, 0.6, 2.2, 5.1, 9.3] };\n\t\t\n\t\t// change enter description\n\t\tdesc = translationMap[newLanguage].app.enterDescribtion;\n\t}\n\n\t// for formatting big numbers for totals\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\t}\n\t\n  function numberISO(x) {\n    return d3.format('.3s')(x)\n             .replace('G', 'B');\n  }\n\n  function numberFormatter(x) {\n    if (x < Math.pow(10, 6)) {\n      return numberWithCommas(x);\n    } else {\n      return numberISO(x);\n    }\n  }\n\n\tfunction jsonToConsole(jsonObject) {\n\t\t// for exporting data\n\t\tconsole.log(JSON.stringify(jsonObject));\n\t}\n\n\tfunction addScenario() {\n\t\tconst newScenario = {\n\t\t\tid: rowsOfScenarios.length,\n\t\t\tloc: selectedLocation,\n\t\t\tfrs: translations.fatalityRisks[selectedSourceId].source,\n\t\t\tH: pctH,\n\t\t\tH_60: pctH_60plus,\n\t\t\tH_below: pctH_below60,\n\t\t\tF: pctOfChange,\n\t\t\tElim: prElimTimes100,\n\t\t\tU: pctU,\n\t\t\ttotInf: totalInfected,\n\t\t\ttotDeaths: totalDeaths,\n\t\t\tyrsLifeLost: totalYearsLost,\n\t\t\tyrsLifeLostCosts: totalMoneyLost,\n\t\t\tcomments: \"Scenario \" + rowsOfScenarios.length.toString() + \": \" + desc};\n\n\t\trowsOfScenarios = rowsOfScenarios.concat(newScenario);\n\t}\n\n\tlet deleteScenario = id => {\n\t\trowsOfScenarios = rowsOfScenarios.filter(scn => scn.id !== id);\n\t}\n\n\t// tab items with labels and values\n\t$: tabItems = [\n    { label: translations.app.tabItem0, value: 0 }, // \"Mortality by Age\"\n    { label: translations.app.tabItem1, value: 1 }, // \"Estimates in Context\"\n\t\t{ label: translations.app.tabItem2, value: 2 }, // \"Risks by Country\"\n\t\t{ label: translations.app.tabItem3, value: 3 }, // \"Poverty Proj.\"\n\t\t{ label: translations.app.tabItem4, value: 4 }, // \"Deaths Proj.\"\n    { label: translations.app.tabItem5, value: 5 }, // \"Hyp. Scenarios\"\n\t\t{ label: translations.app.tabItem6, value: 6 }, // \"Ex. Interpretations\"\n  ];\n  let currentTab = 0; // current active tab\n\n\t// export button\n\tlet userNeeds = {\n\t\texportData: false\n\t};\n\n\tfunction toggleExportData() {\n\t\tuserNeeds.exportData = !userNeeds.exportData;\n\t\tanimateScroll.scrollToBottom();\n\t}\n\n\t/***\n\t * INITS, REACTIVE DECLARATIONS $:\n\t *\n\t */\n\tlet selectedLocation = '';\n \t$: selectedLocation = translations.countries[selectedId].name;\n\n\tlet desc = \"Enter description\"; \t// enter scenario description\n\n\t// subscribe to dictionaries in stores.js\n\tlet english = $englishDictStore;\n\tlet chinese = $chineseDictStore;\n\tlet spanish = $spanishDictStore;\n\n\tlet translationMap = {\n\t\t'en': english,\n\t\t'zh': chinese,\n\t\t'es': spanish };\n\n\tlet language = 'en';\n\t$: translations = translationMap[language];\n\n\tlet defaultLocation = { id: 163, name: \"World\" }; // world is default location \n\n\tlet selectedObject = defaultLocation;\n\t$: selectedId = selectedObject.id;\n\n\tlet defaultSourceObject = { id: 0, source: \"Imperial College - IFR\", ftr: [0.002, 0.006, 0.03, 0.08, 0.15, 0.6, 2.2, 5.1, 9.3] };\n\tlet selectedSourceObject = defaultSourceObject;\n\t$: selectedSourceId = selectedSourceObject.id;\n\n\tlet ageGroups = ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+'];\n\n\t$: demographics = translations.countries[selectedId].demographics;\n\t$: fatalitiesBaseline = translations.fatalityRisks[selectedSourceId].ftr;\n\tlet lifeExpectanciesGlobal = [71.625, 62.950, 53.550, 44.400, 35.375, 26.625, 18.600, 11.950, 6.975];\n\n\n\t/***\n\t * PARAMETERS H, pctOfChange, H_60+, H_below60, Pr(Elimination), H_until\n\t *\n\t*/\n\t$: popSize = demographics.reduce((a, b) => a + b, 0); // population size of the chosen location\n\t$: d_60plus = (demographics[6] + demographics[7] + demographics[8]) / popSize; // proportion of people over 60\n\n\tlet pctOfChange = 0; \t\t// variation of fatality rates\n\tlet pctH = 30; \t\t\t    // proportion of population infected\n\t$: pctH_60plus = Math.round( pctH ); \t // proportion of people over 60 infected\n\n\t// if we decrease proportion of 60+ infected, then proportion of younger people infected increases keeping H_overall fixed\n\t$: pctH_below60 = Math.round( (pctH - pctH_60plus * d_60plus) / (1 - d_60plus) );\n\n\t// derived bounds for pctH_plus based on: 0 <= pctH_below60 <= 1\n\t$: lowerBound = Math.max( 1, (pctH - 100 * (1 - d_60plus)) / d_60plus);  // has to be more than 0 and ...derive\n\t$: upperBound = Math.min( pctH / d_60plus, 99 ); \t                     // can't be more than 100% and pctH / d60_plus\n\n\t// same story for the case of elimination\n\tlet prElimTimes100 = 0; // probability of elimination\n\n\t$: prElim = prElimTimes100 / 100;\n\n\n\tlet pctU = 0; // proportion of population infected until\n\t$: if (pctH < pctU) {\n\t\tpctU = pctH;\n\t}\n\n\t// derive from pctH_60plus to keep the number of parameters low\n\t// then from U_60+/U = H_60+/H we get:\n\t$: pctU_60plus = (pctH_60plus / pctH) * pctU; // proportion of 60+ people that are infected until elimination\n\t$: pctU_below60 = (pctU -  pctU_60plus * d_60plus) / (1 - d_60plus); // pct of people below 60 infected until elimination\n\n\t$: lowerBoundUntil = Math.max( 1, (pctU - 100 * (1 - d_60plus)) / d_60plus);\n\t$: upperBoundUntil = Math.min( pctU / d_60plus, 99 );\n\n\t/***\n\t * CALCULATION of infected, deaths, ... totals\n\t *\n\t */\n\n\t// use pctOfChange to increase / decrease the fatality risks\n\t$: fatalities = fatalitiesBaseline.map( fat => (fat * (1 + pctOfChange / 100)) );\n\n\t// expected number of infected\n\t// E(#of infected) = Pr(Elim) * demo * pctU + [1 - Pr(Elim)] * demo * pctH\n\tlet infected = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tlet i = 0; // for reactive loop when using $: we need to declare it before the loop\n\t// multiply below60 demographics by pctH_below60 selected proportion of infected\n\t$: for (i = 0; i < 6; i++) {\n\t\t\tinfected[i] = Math.round(\n\t\t\t\t\t\t\tprElim *  demographics[i] * pctU_below60 / 100           // infections in case of elimination for below 60\n\t\t\t\t   \t\t\t+ (1 - prElim) * demographics[i] * pctH_below60 / 100 ); // case of no elimination for below 60\n\t}\n\t// multiply 60plus demographics by pctH_60plus selected proportion of infected\n\t$: for (i = 6; i < 9; i++) {\n\t\t\tinfected[i] = Math.round(\n\t\t\t\t\t\t\tprElim * demographics[i] * pctU_60plus / 100             // infections in case of elimination for 60 plus\n\t\t\t\t            + (1 - prElim) * demographics[i] * pctH_60plus / 100 );  // no elimination 60+\n\t}\n\n\t// expected number of deaths\n\t// E(#of deaths) = infected * fatality_risks\n\tlet deaths = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t$: for (i = 0; i < deaths.length; i++) {\n\t\tdeaths[i] = Math.round( infected[i] * fatalities[i] / 100 );\n\t}\n\n\t// expected years of life lost\n\tlet yearsLost = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t$: for (i = 0; i < deaths.length; i++) {\n\t\tyearsLost[i] = Math.round( deaths[i] * lifeExpectanciesGlobal[i] );\n\t}\n\n\t// sum vectors to get totals\n\t$: totalInfected = Math.round( infected.reduce((a, b) => a + b, 0) );\n\t$: totalDeaths = Math.round( deaths.reduce((a, b) => a + b, 0) );\n\t$: totalYearsLost = Math.round( yearsLost.reduce((a, b) => a + b, 0) );\n\t$: totalMoneyLost = Math.round( 129000 * totalYearsLost / Math.pow(10, 9) );\n\n\t// push estimated coronavirus deaths to majorCauses\n\t$: majorCauses = [translations.app.covid19Cause, ...translations.countries[selectedId].majorCauses];\n\t$: majorDeaths = [totalDeaths, ...translations.countries[selectedId].majorDeaths];\n\n\t// push estimated totalYearsLost TODO: DALYs of coronavirus deaths to diseaseNames\n\t$: diseaseNames = [translations.app.covid19Cause, ...translations.countries[selectedId].diseaseNames];\n\t$: diseaseDALYs = [totalYearsLost, ...translations.countries[selectedId].diseaseDALYs];\n\n\t// push estimated totalYearsLost TODO: DALYs of coronavirus deaths to riskCauses\n\t$: riskFactors = [translations.app.covid19Cause, ...translations.countries[selectedId].riskFactors];\n\t$: riskDALYs = [totalYearsLost, ...translations.countries[selectedId].riskDALYs];\n\n\tlet compareItems = [{}, {}, {}];\n\t$: compareItems = [\n    { label: translations.app.compareItems0, value: 0 }, // \"Causes of Death\"\n    { label: translations.app.compareItems1, value: 1 }, // \"Causes of Years of Life Lost\"\n    { label: translations.app.compareItems2, value: 2 }, // \"Risk Factors in Years of Life Lost\"\n  ];\n  let currentCompare = 0; // current active comparison item\n\n\t// to extract types for colors\n\t$: majorCausesEng = [translationMap['en'].app.covid19Cause, ...translationMap['en'].countries[selectedId].majorCauses];\n\n\t// let COVID estimate be 'parameter' color and COVID until be 'until' color\n\tlet compareTypes = [];\n\t$: for (let i = 0; i < majorCausesEng.length; i++) {\n\t\tif (majorCausesEng[i].includes('estimate')) {\n\t\t\tcompareTypes[i] = 'estimate';\n\t\t} else if (majorCausesEng[i].includes('until')) {\n\t\t\t// compareTypes[i] = 'until';\n\t\t} else {\n\t\t\tcompareTypes[i] = 'other';\n\t\t}\n\t}\n\n\tlet compareCauses = [];\n\tlet compareDiseases = [];\n\tlet compareRisks = [];\n\t$: for (let i = 0; i < majorCauses.length; i++) {\n\t\t\tcompareCauses[i] = { name: majorCauses[i], number: majorDeaths[i], type: compareTypes[i] };\n\t}\n\t$: for (let i = 0; i < diseaseNames.length; i++) {\n\t\t\tcompareDiseases[i] = { name: diseaseNames[i], number: diseaseDALYs[i], type: compareTypes[i] };\n\t}\n\t$: for (let i = 0; i < riskFactors.length; i++) {\n\t\t\tcompareRisks[i] = { name: riskFactors[i], number: riskDALYs[i], type: compareTypes[i] };\n\t}\n\n\tlet compareList = [];\n\t$: switch (currentCompare) {\n\t\tcase 0:\n\t\t\tcompareList = compareCauses;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tcompareList = compareDiseases;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcompareList = compareRisks;\n\t}\n\n\t// compare titles\n\tlet titleListName = '';\n\tlet titleListNumber = '';\n\tlet titleListMain = '';\n\t$: titleListMain = translations.app.titleListMain\n\t  + compareItems[currentCompare].label\n\t\t+ translations.app.inCountry + selectedLocation;\n\n\t$: if (currentCompare === 0) {\n\t\ttitleListName = translations.app.titleListName;\n\t\ttitleListNumber = translations.app.deaths;\n\t} else if (currentCompare === 1) {\n\t\ttitleListName = translations.app.titleListName;\n\t\ttitleListNumber = translations.app.yearsOfLifeLost;\n\t} else {\n\t\ttitleListName = translations.app.titleListRisk;\n\t\ttitleListNumber = translations.app.yearsOfLifeLost;\n\t}\n\n\t// ageGroups has numbers the same in all languages\n\tlet ageTypes = [];\n\t$: for (let i = 0; i < ageGroups.length; i++) {\n\t\tif (ageGroups[i].includes('80') || ageGroups[i].includes('70') || ageGroups[i].includes('60')) {\n\t\t\tageTypes[i] = 'over60';\n\t\t} else {\n\t\t\tageTypes[i] = 'below60';\n\t\t}\n\t}\n\n\tlet infectedData = [];\n\tlet deathsData = [];\n\t$: for (let i = 0; i < infected.length; i++) {\n\t\tinfectedData[i] = { name: ageGroups[i], number: infected[i], type: ageTypes[i] };\n\t\tdeathsData[i] = { name: ageGroups[i], number: deaths[i], type: ageTypes[i] };\n\t}\n\n\tlet infectedTitle = \"\";\n\t$: infectedTitle = translations.app.infectedTitle;\n\t  + ' in ' + selectedLocation;\n\n\tlet deathsTitle = \"\";\n\n\tlet infectedTitleListName = \"\";\n\tlet infectedTitleListNumber = \"\";\n\n\tlet deathsTitleListName = \"\";\n\tlet deathsTitleListNumber = \"\";\n\n\t$: deathsTitle = translations.app.deathsTitle;\n\t  + ' in ' + selectedLocation;\n\n  $: infectedTitleListName = translations.app.age;\n  $: infectedTitleListNumber = translations.app.infected;\n\n  $: deathsTitleListName = translations.app.age;\n  $: deathsTitleListNumber = translations.app.age;\n\n\t// projections component \n\tlet projectionsTitle = '';\n\tlet projectionsCaption = '';\n\tlet projectionsXAxisLabel = '';\n\tlet projectionsYAxisLabel = '';\n\tlet projectionsLegendDeaths = '';\n\tlet projectionsLegendDeathsProjected = '';\n\n\t$: projectionsTitle = translations.app.projectionsTitle;\n  $: projectionsXAxisLabel = translations.app.date;\n\t$: projectionsYAxisLabel = translations.app.totDeaths;\n\t$: projectionsLegendDeaths = translations.app.totDeaths;\n\t$: projectionsLegendDeathsProjected = translations.app.totDeathsProj;\n\n\t// to export scenarios, countries population properties, etc. we just pretty print the JSONs\n\t$: exportedData = '\\\"Scenarios\\\": ' + JSON.stringify(rowsOfScenarios, null, 2);\n\n\n\t/***\n\t * SCENARIOS\n\t *\n\t*/\n\n\t// prepare example scenarios as a list of parameters, comments, id's ..\n\t// make a reactive for loop to define $: rowsOfScenarios! the same as infected, deaths, ...\n\tlet inputs = [{}, {}, {}];\n\t$: inputs = [\n\t   {id: 0,\n\t\t\tpctH: 60,\n\t\t\tpctH_60plus: 60,\n\t\t\tpctOfChange: 0,\n\t\t\tprElim100: 0,\n\t\t\tpctU: 0,\n\t\t\tcomments: translations.app.exampleScenario0},\n\t\t\t// \"Scenario 0: Do nothing, as a baseline\"\n\t   {id: 1,\n\t\t\tpctH: 60,\n\t\t\tpctH_60plus: 20,\n\t\t\tpctOfChange: 0,\n\t\t\tprElim100: 0,\n\t\t\tpctU: 0,\n\t\t\tcomments: translations.app.exampleScenario1},\n\t\t\t// \"Scenario 1: Protect people over 60, compensate by exposing those \n\t\t\t// below 60, consider also years of life lost\"\n\t   {id: 2,\n\t\t\tpctH: 60,\n\t\t\tpctH_60plus: 60,\n\t\t\tpctOfChange: 0,\n\t\t\tprElim100: 90,\n\t\t\tpctU: 10,\n\t\t\tcomments: translations.app.exampleScenario2},\n\t\t\t// \"Scenario 2: Elimination to 90%, consider also money saved\"\n\t];\n\n\t// initialize all the variables the reactive loop:\n\tlet pctH_below60Example = 0;\n\tlet pctU_below60Example = 0;\n\tlet pctU_60plusExample = 0;\n\tlet prElimExample = 0;\n\tlet fatalitiesExample = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tlet infectedExample = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tlet deathsExample = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tlet yearsLostExample = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tlet totalInfectedExample = 0;\n\tlet totalDeathsExample = 0;\n\tlet totalYearsLostExample = 0;\n\tlet totalMoneyLostExample = 0;\n\tlet j = 0;\n\tlet rowsOfScenarios = [{}, {}, {}];\n\n\t$: for (i = 0; i < 3; i++) {\n\t\t// d_60plus does not depend on input parameters\n\t\tpctH_below60Example = Math.round( (inputs[i].pctH - inputs[i].pctH_60plus * d_60plus) / (1 - d_60plus) );\n\n\t\t// pctU_60plusExample = proportion of 60+ people that are infected until elimination\n\t\tpctU_60plusExample = (inputs[i].pctH_60plus / inputs[i].pctH) * inputs[i].pctU;\n\t\tpctU_below60Example = (inputs[i].pctU -  pctU_60plusExample * d_60plus) / (1 - d_60plus);\n\n\t\tfatalitiesExample = fatalitiesBaseline.map( fat => (fat * (1 + inputs[i].pctOfChange / 100)) );\n\t\tprElimExample = inputs[i].prElim100 / 100;\n\n\t\tfor (j = 0; j < 6; j ++) {\n\t\t\t\tinfectedExample[j] = Math.round( prElimExample * demographics[j] * pctU_below60Example / 100\n\t\t\t\t\t\t\t\t+ (1 - prElimExample) * demographics[j] * pctH_below60Example / 100 );\n\t\t}\n\t\tfor (j = 6; j < 9; j++) {\n\t\t\t\tinfectedExample[j] = Math.round( prElimExample * demographics[j] * pctU_60plusExample / 100\n\t\t\t\t\t\t\t\t+ (1 - prElimExample) * demographics[j] * inputs[i].pctH_60plus / 100 );\n\t\t}\n\n\t\tfor (j = 0; j < deathsExample.length; j++) {\n\t\t\tdeathsExample[j] = Math.round( infectedExample[j] * fatalitiesExample[j] / 100 );\n\t\t}\n\n\t\tfor (j = 0; j < yearsLostExample.length; j++) {\n\t\t\tyearsLostExample[j] = Math.round( deathsExample[j] * lifeExpectanciesGlobal[j] );\n\t\t}\n\n\t\ttotalInfectedExample = Math.round( infectedExample.reduce((a, b) => a + b, 0) );\n\t\ttotalDeathsExample = Math.round( deathsExample.reduce((a, b) => a + b, 0) );\n\t\ttotalYearsLostExample = Math.round( yearsLostExample.reduce((a, b) => a + b, 0) );\n\t\ttotalMoneyLostExample = Math.round( 129000 * totalYearsLostExample / Math.pow(10, 9) ); // in $< >B or billion format\n\n\t\trowsOfScenarios[i] = {\n\t\t\tid: inputs[i].id,\n\t\t\tloc: selectedLocation,\n\t\t\tfrs: translations.fatalityRisks[selectedSourceId].source,\n\t\t\tH: inputs[i].pctH,            // just copy first five input parameters to output\n\t\t\tH_60: inputs[i].pctH_60plus,\n\t\t\tH_below: pctH_below60Example,\n\t\t\tF: inputs[i].pctOfChange,\n\t\t\tElim: inputs[i].prElim100,\n\t\t\tU: inputs[i].pctU,\n\t\t\ttotInf: totalInfectedExample,\n\t\t\ttotDeaths: totalDeathsExample,\n\t\t\tyrsLifeLost: totalYearsLostExample,\n\t\t\tyrsLifeLostCosts: totalMoneyLostExample,\n\t\t\tcomments: inputs[i].comments};\n\t}\n\n\t// world map\n\tlet mapTitle = '';\n\t$: mapTitle = translations.app.mapTitle;\n\n\tlet mapItems = [{}, {}];\n\t$: mapItems = [\n\t\t{ label: translations.app.mapItems0, value: 0 }, // \"Proportion of people over 60 by Country\"\n\t\t{ label: translations.app.mapItems1, value: 1 } // \"Income by Country\"\n\t];\n\tlet selectedRisk = 0;\n\n\t\n\t// poverty\n\tlet povertyItems = [{}, {}];\n\t$: povertyItems = [\n    { label: translations.app.povertyItems0, value: 0 }, // \"By Country\"\n    { label: translations.app.povertyItems1, value: 1 } // \"By Region\"\n  ];\n  let currentPoverty = 0;\n\n\n\t// poverty increases by country:\n\t$: povertyProjCountryNames = [translations.app.india, \n\t\ttranslations.app.nigeria,\n\t\ttranslations.app.drCongo,\n\t\ttranslations.app.ethiopia,\n\t\ttranslations.app.bangladesh,\n\t\ttranslations.app.tanzania,\n\t\ttranslations.app.madagascar,\n\t\ttranslations.app.indonesia,\n\t\ttranslations.app.kenya,\n\t\ttranslations.app.mozambique,\n\t\ttranslations.app.uganda,\n\t\ttranslations.app.southAfrica];\n\tlet povertyProjCountryNumbers = [8784000, 5023850, 2842320, 1604720, 1221500,\n\t\t1139840, 976040, 927000, 915720, 897520, 821600, 721050];\n\n\tlet povertyProjCountries = []\n\t$: for (let i = 0; i < povertyProjCountryNames.length; i++) {\n\t\t\tpovertyProjCountries[i] = {\n\t\t\t\tname: povertyProjCountryNames[i],\n\t\t\t\tnumber: povertyProjCountryNumbers[i],\n\t\t\t\ttype: 'poverty' };\n\t}\n\n\t// poverty increases by region:\n\t$: povertyProjRegionNames = [\n\t\ttranslations.app.subSahAfrica,\n\t\ttranslations.app.southAsia,\n\t\ttranslations.app.eastAsiaPacific,\n\t\ttranslations.app.latinCaribbean,\n\t\ttranslations.app.middleEastNorthAfrica,\n\t\ttranslations.app.europeCentralAsia,\n\t\ttranslations.app.northAmerica];\n\n\tlet povertyProjRegionNumbers = [21994380.0, 10619000.0, 2294580.0, 1796560.0, 867540.0, 665690.0, 313600.0];\n\n\tlet povertyProjRegions = []\n\t$: for (let i = 0; i < povertyProjRegionNames.length; i++) {\n\t\t\tpovertyProjRegions[i] = {\n\t\t\t\tname: povertyProjRegionNames[i],\n\t\t\t\tnumber: povertyProjRegionNumbers[i],\n\t\t\t\ttype: 'poverty' };\n\t}\n\n\t// Projected Poverty Increases by Country and Region\n\tlet mainProjCountries = '';\n\tlet nameProjCountries = '';\n\tlet numberProjCountries = '';\n\n\tlet mainProjRegions = '';\n\tlet nameProjRegions = '';\n\tlet numberProjRegions = '';\n\n\t$: mainProjCountries = translations.app.projectionsTitle + \n\t\ttranslations.app.country;\n\t$: nameProjCountries = translations.app.country;\n\t$: numberProjCountries = translations.app.people;\n\n\t$: mainProjRegions = translations.app.projectionsTitle + \n\t\ttranslations.app.region;\n\t$: nameProjRegions = translations.app.region;\n\t$: numberProjRegions = translations.app.people;\n\n\t// color countries by regions\n\t// 'Sub-Saharan Africa', 'South Asia', 'East Asia & Pacific',\n\t// 'Latin America & Caribbean', 'Middle East & North Africa', 'Europe & Central Asia', 'North America'\n\tlet colorsProjRegions = ['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628'];\n\tlet colorsProjCountries = [colorsProjRegions[1],\n\t\tcolorsProjRegions[0], colorsProjRegions[0], colorsProjRegions[0],\n\t\tcolorsProjRegions[1], colorsProjRegions[0], colorsProjRegions[0],\n\t  colorsProjRegions[2], colorsProjRegions[0], colorsProjRegions[0],\n\t\tcolorsProjRegions[0], colorsProjRegions[0]];\n\n</script>\n\n\n<main class=\"container\">\n\n\t<div class=\"row\">\n\t\t<div class=\"eight columns title\">\n\t\t\t<div class = \"child\">\n\t\t\t\t<h3 class=\"title\">{translations.app.mainTitle}</h3>\n\t\t\t\t<h6 class=\"parameter-text\">{translations.app.subtitle}</h6>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"four columns title\">\n\t\t\t<div class=\"child\">\n\t\t\t\t<a href=\"#zh\" class=\"lang-link\" on:click=\"{\n\t\t\t\t\t() => changeLanguageTo('zh')}\">中文\n\t\t\t\t</a>\n\t\t\t\t<a href=\"#es\" class=\"lang-link\" on:click=\"{\n\t\t\t\t\t() => changeLanguageTo('es')}\">Español\n\t\t\t\t\t</a>\n\t\t\t\t<a href=\"#en\" class=\"lang-link\" on:click=\"{\n\t\t\t\t\t() => changeLanguageTo('en')}\">English\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"row\">\n\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\t\t\t\t<label>\n\t\t\t\t\t<p class=\"parameter-title\"\n\t\t\t\t\t\tstyle=\"text-align:left;\">\n\t\t\t\t\t\t{translations.app.selectLocation}\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t{translations.app.locationDescription}\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t<AutoComplete\n\t\t\t\t\t\titems={translations.countries}\n\t\t\t\t\t\tbind:selectedItem={selectedObject}\n\t\t\t\t\t\tlabelFieldName=\"name\"\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\n\t\t\t\t<label>\n\t\t\t\t\t<p class=\"parameter-title\"\n\t\t\t\t\t\tstyle=\"text-align:left;\">\n\t\t\t\t\t  {translations.app.infectionRate}\n\t\t\t\t    <span class=\"parameter\" style=\"float:right;\">{pctH}%</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t{translations.app.infectionRateDescription}\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<input class=\"pointer u-full-width\"\n\t\t\t\t\ttype=range\tbind:value={pctH}\tmin=1\tmax=99\n\t\t\t\t\ton:click={keepUpWithH} />\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\t\t\t\t<label>\n\t\t\t\t\t<p class=\"parameter-title\"\n\t\t\t\t\t\tstyle=\"text-align:left;\">\n\t\t\t\t\t\t{translations.app.over60InfectionRate}\n\t\t\t\t\t\t<span class=\"parameter\" style=\"float:right;\">{pctH_60plus}%</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t{translations.app.over60Description}\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\n\t\t\t\t<input\n\t\t\t\t\tclass=\"pointer u-full-width\"\n\t\t\t\t\ttype=range\n\t\t\t\t\tbind:value={pctH_60plus}\n\t\t\t\t\tmin={lowerBound}\n\t\t\t\t\tmax={upperBound}\n\t\t\t\t/>\n\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t{translations.app.proportionIsThen}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"parameter\">{pctH_below60}%</span>\n\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t{translations.app.proportionIsThenDescription}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\n\t<div class=\"row\">\n\t\t<div class=\"twelve columns\">\n\n\t\t\t<Tabs bind:activeTabValue={currentTab} items={tabItems} />\n\t\t\t{#if 0 === currentTab}\n\t\t\t\t<div class=\"row\" in:fade=\"{{duration: durationIn}}\" out:fade=\"{{duration: durationOut}}\">\n\t\t\t\t\t<div class=\"twelve columns\">\n\t\t\t\t\t\t<div class=\"child\">\n\t\t\t\t\t\t\t<CompareByAge\n\t\t\t\t\t\t\t\t{infectedData} {infectedTitle}\n\t\t\t\t\t\t\t\t{infectedTitleListName} {infectedTitleListNumber}\n\t\t\t\t\t\t\t\t{deathsData} {deathsTitle}\n\t\t\t\t\t\t\t\t{deathsTitleListName} {deathsTitleListNumber} />\n\t\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"one columns\">\n\t\t\t\t\t\t<Square text={'60+'} color={'#43a2ca'}/>\n\t\t\t\t\t\t<Square text={'<60'} color={'#d4f0cd'}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ten columns\"> \n\t\t\t\t\t\t<div class=\"caption\">\n\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t{translations.app.basedOn}\n\t\t\t\t\t\t\t\t<span class=\"parameter\">{translations.fatalityRisks[selectedSourceId].source}</span>\n\t\t\t\t\t\t\t\t{translations.app.basedOnContinued1}\n\t\t\t\t\t\t\t\t<span class=\"parameter\">{rowsOfScenarios[0].loc}</span>\n\t\t\t\t\t\t\t\t{translations.app.basedOnContinued2}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"emphasize-text\">\t\t\t\t\n\t\t\t\t\t\t\t\t{numberFormatter(totalInfected)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t{translations.app.basedOnContinued3}  \n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"emphasize-text\">\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{numberFormatter(totalDeaths)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t{translations.app.basedOnContinued4}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"emphasize-text\">\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{numberFormatter(totalYearsLost)}\n\t\t\t\t\t\t\t</span>\t\n\t\t\t\t\t\t\t<span class=\"parameter-text\">\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{translations.app.basedOnContinued5}\n\t\t\t\t\t\t\t\t<span class=\"parameter\">{selectedLocation}</span>.\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t{#if 1 === currentTab}\n\t\t\t\t<div style=\"margin-top: 5px\">\n\t\t\t\t\t<Subtabs bind:activeTabValue={currentCompare} items={compareItems} />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"twelve columns\" style=\"text-align: center; margin-top: 25px\">\n\t\t\t\t\t<div class=\"child\">\n\t\t\t\t\t\t<Compare compareData={compareList}\n\t\t\t\t\t\t\t{titleListMain} {titleListName} {titleListNumber} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"two columns\">\n\t\t\t\t\t\t<svg \n\t\t\t\t\t\twidth=\"{90}\" height=\"{90}\"\n\t\t\t\t\t\tstyle=\"background-color: white\">\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"two columns\">\n\t\t\t\t\t\t<Square text={'2020+'} color={'#fdc086'} factorWidth={4}/>\n\t\t\t\t\t\t<Square text={'2017'} color={'#beaed4'} factorWidth={4}/>\n\t\t\t\t\t\t<Square text={'<2020-05-27'} color={'#7fc97f'} factorWidth={6}/>\n\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t<div class=\"eight columns\">\n\t\t\t\t\t\t{#if 0 == currentCompare}\n\t\t\t\t\t\t\t<div class=\"caption\">\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\"> \n\t\t\t\t\t\t\t\t\t{translations.app.compareWithOtherCaption1}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t {translations.app.compareWithOtherCaption2}\n\t\t\t\t\t\t\t\t\t<a href=\"https://ourworldindata.org/causes-of-death\">Our World in Data</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t{translations.app.compareWithOtherCaption3}\n\t\t\t\t\t\t\t\t\t<a href=\"https://ourworldindata.org/coronavirus-data\">Our World in Data</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\t\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if 1 == currentCompare}\n\t\t\t\t\t\t\t<div class=\"caption\">\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\"> \n\t\t\t\t\t\t\t\t\t{translations.app.compareWithOtherCaption1}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t{translations.app.compareWithOtherCaption4}\n\t\t\t\t\t\t\t\t\t<a href=\"https://ourworldindata.org/grapher/burden-of-disease-by-cause\">Our World in Data</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t{translations.app.compareWithOtherCaption5}\n\t\t\t\t\t\t\t\t\t<a href=\"https://ourworldindata.org/coronavirus-data\">Our World in Data</a>\n\t\t\t\t\t\t\t\t\t{translations.app.authorsCalculations}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\t\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#if 2 == currentCompare}\n\t\t\t\t\t\t\t<div class=\"caption\">\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t{translations.app.compareWithOtherCaption1}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t{translations.app.compareWithOtherCaption7}\n\t\t\t\t\t\t\t\t\t <a href=\"https://ourworldindata.org/grapher/disease-burden-by-risk-factor\">Our World in Data</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t{translations.app.compareWithOtherCaption5}\n\t\t\t\t\t\t\t\t\t<a href=\"https://ourworldindata.org/coronavirus-data\">Our World in Data</a>\n\t\t\t\t\t\t\t\t\t{translations.app.authorsCalculations}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t{#if 2 === currentTab}\n\t\t\t\t<div class = \"row\" in:fade=\"{{duration: durationIn}}\" out:fade=\"{{duration: durationOut}}\">\n\t\t\t\t\t<Subtabs bind:activeTabValue={selectedRisk} items={mapItems} />\n\t\t\t\t\t<div class=\"twelve columns\" style=\"text-align: center; margin-top: 25px\">\n\t\t\t\t\t\t<div class=\"child\">\n\t\t\t\t\t\t\t{#if 0 == selectedRisk}\n\t\t\t\t\t\t\t\t<div class='worldmap-title'\n\t\t\t\t\t\t\t\t\tstyle='font-size: 16;'>\n\t\t\t\t\t\t\t\t\t{translations.app.proportionOver60ByCountry}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"child\">\n\t\t\t\t\t\t\t\t\t<WorldMap {mapTitle} {selectedRisk} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t{#if 1 == selectedRisk}\n\t\t\t\t\t\t\t\t<div class='worldmap-title'\n\t\t\t\t\t\t\t\t\tstyle='font-size: 16;'>\n\t\t\t\t\t\t\t\t\t{translations.app.lowIncomeRiskByCountry}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"child\">\n\t\t\t\t\t\t\t\t\t<WorldMap {mapTitle} {selectedRisk} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t<div class='caption'>\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t{translations.app.mapCaption}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t{translations.app.source}\n\t\t\t\t\t\t\t\t\t<a href=\"https://github.com/topojson/world-atlas\">World Atlas TopoJSON</a> \n\t\t\t\t\t\t\t\t\t{translations.app.authorsCalculations}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t{#if 3 === currentTab}\n\t\t\t\t<Subtabs bind:activeTabValue={currentPoverty} items={povertyItems} />\n\t\t\t\t{#if 0 == currentPoverty}\n\t\t\t\t\t<div class=\"twelve columns\" style=\"text-align: center; margin-top: 25px\">\n\t\t\t\t\t\t<div class=\"child\">\n\t\t\t\t\t\t\t\t<Poverty compareData={povertyProjCountries}\n\t\t\t\t\t\t\t\t\t\t\t\ttitleListMain={mainProjCountries}\n\t\t\t\t\t\t\t\t\t\t\t\ttitleListName={nameProjCountries}\n\t\t\t\t\t\t\t\t\t\t\t\ttitleListNumber={numberProjCountries}\n\t\t\t\t\t\t\t\t\t\t\t\tcolorsList={colorsProjCountries} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"one columns\">\n\t\t\t\t\t\t\t<svg \n\t\t\t\t\t\t\twidth=\"{90}\" height=\"{90}\"\n\t\t\t\t\t\t\tstyle=\"background-color: white\">\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"three columns\">\n\t\t\t\t\t\t\t<Square text={translations.app.southAsia} color={'#377eb8'} factorWidth={8}/>\n\t\t\t\t\t\t\t<Square text={translations.app.subSahAfrica} color={'#e41a1c'} factorWidth={8}/>\n\t\t\t\t\t\t\t<Square text={translations.app.eastAsiaPacific} color={'#4daf4a'} factorWidth={8}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"eight columns\">\n\t\t\t\t\t\t\t<div class='caption'>\n\t\t\t\t\t\t\t\t<div class='parameter-text'>\n\t\t\t\t\t\t\t\t\t{translations.app.projectedPovery}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='parameter-text'>\n\t\t\t\t\t\t\t\t\t{translations.app.sources}\n\t\t\t\t\t\t\t\t\t<a href=\"https://www.imf.org/~/media/Files/Publications/WEO/2020/April/English/execsum.ashx?la=en\">IFM</a>, \n\t\t\t\t\t\t\t\t\t<a href=\"https://data.worldbank.org/indicator/SI.POV.DDA\">POVCAL</a> \n\t\t\t\t\t\t\t\t\t{translations.app.authorsCalculations}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t\t{#if 1 == currentPoverty}\n\t\t\t\t\t<div class=\"twelve columns\" style=\"text-align: center; margin-top: 25px\">\n\t\t\t\t\t\t<div class=\"child\">\t\t\t\t\n\t\t\t\t\t\t\t\t<Poverty compareData={povertyProjRegions}\n\t\t\t\t\t\t\t\t\t\t\t\ttitleListMain={mainProjRegions}\n\t\t\t\t\t\t\t\t\t\t\t\ttitleListName={nameProjRegions}\n\t\t\t\t\t\t\t\t\t\t\t\ttitleListNumber={numberProjRegions}\n\t\t\t\t\t\t\t\t\t\t\t\tcolorsList={colorsProjRegions}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"four columns\">\n\t\t\t\t\t\t\t<svg \n\t\t\t\t\t\t\twidth=\"{90}\" height=\"{90}\"\n\t\t\t\t\t\t\tstyle=\"background-color: white\">\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"eight columns\">\n\t\t\t\t\t\t\t<div class='caption'>\n\t\t\t\t\t\t\t\t<div class='parameter-text'>\n\t\t\t\t\t\t\t\t\t{translations.app.projectedPovery}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='parameter-text'>\n\t\t\t\t\t\t\t\t\t{translations.app.sources}\n\t\t\t\t\t\t\t\t\t<a href=\"https://www.imf.org/~/media/Files/Publications/WEO/2020/April/English/execsum.ashx?la=en\">IFM</a>, \n\t\t\t\t\t\t\t\t\t<a href=\"https://data.worldbank.org/indicator/SI.POV.DDA\">POVCAL</a> \n\t\t\t\t\t\t\t\t\t{translations.app.authorsCalculations}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\n\t\t\t\t{/if}\n\t\t\t{/if}\n\n\t\t\t{#if 4 === currentTab}\n\t\t\t\t<div class = \"row\" in:fade=\"{{duration: durationIn}}\" out:fade=\"{{duration: durationOut}}\">\n\t\t\t\t\t<div class=\"twelve columns\">\n\t\t\t\t\t\t<div class=\"child\">\n\t\t\t\t\t\t\t<Projections \n\t\t\t\t\t\t\t\tprojectionsTitle={projectionsTitle}\n\t\t\t\t\t\t\t\tprojectionsXAxisLabel={projectionsXAxisLabel}\n\t\t\t\t\t\t\t\tprojectionsYAxisLabel={projectionsYAxisLabel}\n\t\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"one columns\">\n\t\t\t\t\t\t\t<svg \n\t\t\t\t\t\t\twidth=\"{90}\" height=\"{90}\"\n\t\t\t\t\t\t\tstyle=\"background-color: white\">\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"three columns\">\n\t\t\t\t\t\t\t<LineLegend text={projectionsLegendDeaths} \n\t\t\t\t\t\t\t\ttype={'continuous'} factorWidth={15}/>\n\t\t\t\t\t\t\t<LineLegend text={projectionsLegendDeathsProjected} \n\t\t\t\t\t\t\t\ttype={'dashed'} factorWidth={15}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"eight columns\">\n\t\t\t\t\t\t\t<div class='caption'>\n\t\t\t\t\t\t\t\t<div class='parameter-text'>\n\t\t\t\t\t\t\t\t\t{translations.app.projectionsCaption}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='parameter-text'>\n\t\t\t\t\t\t\t\t\t{translations.app.source}\n\t\t\t\t\t\t\t\t\t<a href=\"http://www.healthdata.org/\">IHME</a> \n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t{#if 5 == currentTab}\n\t\t\t\t<div class=\"row\" in:fade=\"{{duration: durationIn}}\" out:fade=\"{{duration: durationOut}}\">\n\t\t\t\t\t<div class=\"twelve columns\">\n\t\t\t\t\t\t<div class=\"child parameter-text\">\n\n\t\t\t\t\t\t\t<div class=\"wtitle\">\n\t\t\t\t\t\t\t\tHypothetical COVID-19 Scenarios\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<table class=\"table1\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.location}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.fatalityRates}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.varyFRs}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.infectionRate}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.over60InfectionRate}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.over60InfectionRate}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.elimination}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.infectionUntil}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.infected}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.deaths}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.yrsOfLifeLost}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.yrsOfLifeLostCosts}</th>\n\t\t\t\t\t\t\t\t\t\t<th>{translations.app.scenariosDescription}</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{#each rowsOfScenarios as scenario}\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{scenario.loc}</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{scenario.frs}</span></td>\n\t\t\t\t\t\t\t\t\t\t<td>{scenario.F}%</td>\n\t\t\t\t\t\t\t\t\t\t<td>{scenario.H}%</td>\n\t\t\t\t\t\t\t\t\t\t<td>{scenario.H_60}%</td>\n\t\t\t\t\t\t\t\t\t\t<td>{scenario.H_below}%</td>\n\t\t\t\t\t\t\t\t\t\t<td>{scenario.Elim}%</td>\n\t\t\t\t\t\t\t\t\t\t<td>{scenario.U}%</td>\n\t\t\t\t\t\t\t\t\t\t<td>{numberFormatter(scenario.totInf)}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{numberFormatter(scenario.totDeaths)}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{numberFormatter(scenario.yrsLifeLost)}</td>\n\t\t\t\t\t\t\t\t\t\t<td>${numberFormatter(scenario.yrsLifeLostCosts)}B</td>\n\t\t\t\t\t\t\t\t\t\t<td>{scenario.comments}\n\t\t\t\t\t\t\t\t\t\t\t{#if scenario.id > 2}\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ton:click={deleteScenario(scenario.id)}>Delete\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{selectedLocation}</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{translations.fatalityRisks[selectedSourceId].source}</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{pctOfChange}%</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{pctH}%</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{pctH_60plus}%</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{pctH_below60}%</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{prElimTimes100}%</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{pctU}%</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{numberFormatter(totalInfected)}</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{numberFormatter(totalDeaths)}</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">{numberFormatter(totalYearsLost)}</span></td>\n\t\t\t\t\t\t\t\t\t<td><span class=\"parameter\">${numberFormatter(totalMoneyLost)}B</span></td>\n\t\t\t\t\t\t\t\t\t<td><input bind:value={desc}>\n\t\t\t\t\t\t\t\t\t\t<button class=\"button\" on:click={addScenario}>Add</button>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"caption\">\n\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t{#if 6 == currentTab}\n\t\t\t\t<div class=\"row\" in:fade=\"{{duration: durationIn}}\" out:fade=\"{{duration: durationOut}}\">\n\t\t\t\t\t<div class=\"twelve columns\">\n\t\t\t\t\t\t<div class=\"child\">\n\n\t\t\t\t\t\t\t<div class=\"wtitle\">\n\t\t\t\t\t\t\t\tExample Interpretations\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<table class=\"table2\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr class=\"parameter-title\">\n\t\t\t\t\t\t\t\t\t\t<th>Scenario 0: Do nothing, as a baseline</th>\n\t\t\t\t\t\t\t\t\t\t<th>Scenario 1: Decrease infection rate for people over 60\n\t\t\t\t\t\t\t\t\t\t\tand increase for those below 60</th>\n\t\t\t\t\t\t\t\t\t\t<th>Scenario 2: Increase the probability of elimination</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tIf by the pandemic's end {rowsOfScenarios[0].H}%\n\t\t\t\t\t\t\t\t\t\t\tof all age groups are infected in:\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"parameter\">{rowsOfScenarios[0].loc}</span>.\n\t\t\t\t\t\t\t\t\t\t\tThen we can expect:\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].totInf)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tinfected.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tIf by the pandemic's end only {rowsOfScenarios[1].H_60}%\n\t\t\t\t\t\t\t\t\t\t\tof people over 60 have been infected.\n\t\t\t\t\t\t\t\t\t\t\tThen to compensate {rowsOfScenarios[1].H_below}%\n\t\t\t\t\t\t\t\t\t\t\tof people below 60 need to be infected to achieve\n\t\t\t\t\t\t\t\t\t\t\tthe {rowsOfScenarios[1].H}% overall proportion of infected.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tSay we manage to increase the probability\n\t\t\t\t\t\t\t\t\t\t\tof achieving COVID-19 elimination from 0\n\t\t\t\t\t\t\t\t\t\t\tto {rowsOfScenarios[2].Elim}%\n\t\t\t\t\t\t\t\t\t\t\tand say that {rowsOfScenarios[2].U}%\n\t\t\t\t\t\t\t\t\t\t\tof people get infected until elimination is achieved.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tBased on selected fatality risks\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"parameter\">{translations.fatalityRisks[selectedSourceId].source}</span>\n\t\t\t\t\t\t\t\t\t\t\tand <span class=\"parameter\">{rowsOfScenarios[0].loc}</span>'s age distribution\n\t\t\t\t\t\t\t\t\t\t\twe can expect:\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].totDeaths)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tlifes lost.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tThen we can expect to save:\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].totDeaths)} -\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[1].totDeaths)} =\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].totDeaths - rowsOfScenarios[1].totDeaths)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tlifes or achieve\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\"> <!-- -100*( after/before - 1 ) = percent of decrease -->\n\t\t\t\t\t\t\t\t\t\t\t{ Math.round( -100*(rowsOfScenarios[1].totDeaths / rowsOfScenarios[0].totDeaths - 1) )}%\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tdecrease in risk of death.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tThen we can expect to save:\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].totDeaths)} -\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[2].totDeaths)} =\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].totDeaths - rowsOfScenarios[2].totDeaths)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tlifes\n\t\t\t\t\t\t\t\t\t\t\tor achieve\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t{ Math.round( -100*(rowsOfScenarios[2].totDeaths / rowsOfScenarios[0].totDeaths - 1) )}%\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tdecrease in the risk of death.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tBased on global life expectancies and number\n\t\t\t\t\t\t\t\t\t\t\tof deaths across age groups we can expect:\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].yrsLifeLost)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\texpected years of life lost.\n\t\t\t\t\t\t\t\t\t\t\tWe can also estimate expected amount of money lost based on\n\t\t\t\t\t\t\t\t\t\t\texpected years of life lost:\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t${numberFormatter(rowsOfScenarios[0].yrsLifeLostCosts)}B.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tSince younger people have higher life expectancy than older people,\n\t\t\t\t\t\t\t\t\t\t\tincreasing the proportion of infected people below 60, increases\n\t\t\t\t\t\t\t\t\t\t\tthe number of deaths among young people.\n\t\t\t\t\t\t\t\t\t\t\tBased on selected fatality risks we can expect to save:\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].yrsLifeLost)} -\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[1].yrsLifeLost)} =\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t{numberFormatter(rowsOfScenarios[0].yrsLifeLost - rowsOfScenarios[1].yrsLifeLost)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tyears of potential life or achieve\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\"> <!-- -100*( after/before - 1 ) = percent of decrease -->\n\t\t\t\t\t\t\t\t\t\t\t{Math.round( 100 * rowsOfScenarios[1].yrsLifeLost / rowsOfScenarios[0].yrsLifeLost )}%\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tdecrease in expected years of life lost.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tBased on expected years of life lost\n\t\t\t\t\t\t\t\t\t\t\twe can expect to save:\n\t\t\t\t\t\t\t\t\t\t\t${numberFormatter(rowsOfScenarios[0].yrsLifeLostCosts)}B -\n\t\t\t\t\t\t\t\t\t\t\t${numberFormatter(rowsOfScenarios[2].yrsLifeLostCosts)}B =\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"emphasize-text\">\n\t\t\t\t\t\t\t\t\t\t\t${numberFormatter(rowsOfScenarios[0].yrsLifeLostCosts - rowsOfScenarios[2].yrsLifeLostCosts)}B.\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t\t\t\tThis is also a crude estimate of what a society could aim to invest in\n\t\t\t\t\t\t\t\t\t\t\tsuch a life-saving treatments (e.g. development of vaccines)\n\t\t\t\t\t\t\t\t\t\t\tor life-saving interventions (e.g. social distancing).\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"caption\">\n\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\tEstimates should be interpreted with caution.\n\t\t\t\t\t\t\t\tThis tool is focused on simple presentation and pedagogical aspects\n\t\t\t\t\t\t\t\tand only offers crude estimates. It uses relatively simplistic\n\t\t\t\t\t\t\t\tmethodology outlined in the Notes below.\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\t</div>\n\n\t<div class=\"row\">\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\n\t\t\t\t<label>\n\t\t\t\t\t<p class=\"parameter-title\"\n\t\t\t\t\t\tstyle=\"text-align:left;\">\n\t\t\t\t\t\t{translations.app.fatalityRates}\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t{translations.app.fatalityRatesDescription}\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t<AutoComplete\n\t\t\t\t\t\titems={translations.fatalityRisks}\n\t\t\t\t\t\tbind:selectedItem={selectedSourceObject}\n\t\t\t\t\t\tlabelFieldName=\"source\"\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"parameter-text\">\n\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\t\t\t\t<label>\n\t\t\t\t\t<p class=\"parameter-title\"\n\t\t\t\t\t\tstyle=\"text-align:left;\">\n\t\t\t\t\t\t{translations.app.varyFRs}\n\t\t\t\t\t\t<span class=\"parameter\" style=\"float:right;\">{pctOfChange}%</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t{translations.app.varyFRsDescription1}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t\t{translations.app.varyFRsDescription2}\t\t\t\t\t\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<input class=\"u-full-width\" type=range\n\t\t\t\t\tbind:value={pctOfChange} min=-100 max=100/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\t\t\t\t<div class=\"button-class\">\n\t\t\t\t\t<button class=\"button\" on:click={resetParameters}>{translations.app.reset}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t{translations.app.resetDescription}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"row\">\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\t\t\t\t<label>\n\t\t\t\t\t<p class=\"parameter-title\"\n\t\t\t\t\t\tstyle=\"text-align:left;\">\n\t\t\t\t\t\t{translations.app.elimination}\n\t\t\t\t\t\t<span class=\"parameter\" style=\"float:right;\">{prElimTimes100}%</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t{translations.app.eliminationDescription1}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"parameter\">\n\t\t\t\t\t\t\t{Math.round(pctH)}%\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"parameter-text\">\n\t\t\t\t\t\t\t{translations.app.eliminationDescription2}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<input class=\"pointer u-full-width\" type=range\n\t\t\t\t\tbind:value={prElimTimes100} min=0\tmax=100\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\t\t\t\t<label>\n\t\t\t\t\t<p class=\"parameter-title\"\n\t\t\t\t\t\tstyle=\"text-align:left;\">\n\t\t\t\t\t\t\t{translations.app.infectionUntil}\n\t\t\t\t\t\t<span class=\"parameter\" style=\"float:right;\">{pctU}%</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div class=\"parameter-text\">\n\t\t\t\t\t\t\t{translations.app.infectionUntilDescription}\n\t\t\t\t\t</div>\n\t\t\t\t</label>\n\t\t\t\t<input class=\"pointer u-full-width\"\ttype=range\n\t\t\t\t\tbind:value={pctU} min={0}\tmax={pctH} />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"four columns\">\n\t\t\t<div class=\"child parameter-space-4\">\n\t\t\t\t{#if userNeeds.exportData}\n\t\t\t\t\t<button class=\"button-class\" on:click={\n\t\t\t\t\t\ttoggleExportData}>\n\t\t\t\t\t\t{translations.app.hideExport}\n\t\t\t\t\t</button>\n\t\t\t\t{/if}\n\t\t\t\t{#if !userNeeds.exportData}\n\t\t\t\t\t<button class=\"button-class\"\n\t\t\t\t\ton:click={toggleExportData}>\n\t\t\t\t\t\t{translations.app.export}\n\t\t\t\t\t</button>\n\t\t\t\t{/if}\n\t\t\t\t<span\tclass=\"parameter-text\">\n\t\t\t\t\t\t{translations.app.exportDescription}\n\t\t\t\t</span>\n\t\t</div>\n\t</div>\n\t{#if userNeeds.exportData}\n\t\t<div class=\"row\" in:fly=\"{{duration: 800}}\" out:fly=\"{{duration: 800}}\">\n\t\t\t<div class=\"twelve columns\">\n\t\t\t\t<textarea bind:value={exportedData}></textarea>\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n\n\t\t<div class=\"row\">\n\t\t\t<div class=\"twelve columns\">\n\t\t\t\t<div class=\"child parameter-text\"> \n\t\t\t\t\t<div class=\"wtitle\">About</div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAt the time of writing, the impacts of COVID-2019 \n\t\t\t\t\t\tremain largely uncertain and depend on a whole range of possibilities.\n\n\t\t\t\t\t\tOrganizing the overwhelming mass of the available information in the media and literature, \n\t\t\t\t\t\tcoming up with a reasonable working estimates and comparing multiple scenarios can be challenging.\n\n\t\t\t\t\t\tAs an attempt to address this problem I used publicly available data and published information \n\t\t\t\t\t\tto create this international tool that allows users to derive their own country-specific estimates.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPlease send me feedback:\n\t\t\t\t\t\t<a href=\"https://twitter.com/MarkoLalovic/status/1266022718035632128\">here</a>.\n\t\t\t\t\t\t\n\t\t\t\t\t\tor email me:\n\t\t\t\t\t\t<a href=\"mailto:marko.lalovic@yahoo.com?Subject=COVID%20analyzer\" target=\"_top\">here</a>.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFor technical details please refer to:\n\t\t\t\t\t\t<a href=\"notes.html\">notes</a>\n\t\t\t\t\t\t\n\t\t\t\t\t\tor the:\n\t\t\t\t\t\t<a href=\"https://github.com/markolalovic/covid-calc\">source code</a>.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<div class=\"wtitle\">Acknowledgements</div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tTjaša Kovačević for help with the calculation of expected years of life lost and economic impacts on poverty.\n\t\t\t\t\t</p>\n\t\t\t\t\t<!-- TODO: references here? -->\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n</main>\n\n\n<style type=\"text/css\">\n\t.pointer {\n\t\tcursor: pointer; /* for a hand simbol on slider and maybe tooltips? */\n\t}\n\t.row {\n\t\tmargin-bottom: 5px;\n\t\tline-height: 16px;\n\t\tfont-family: 'Roboto', sans-serif;\n\t}\n\t.child {\n\t\tmargin-left: 2px;\n\t\tmargin-right: 2px;\n\t}\n\t.caption {\n\t\tmargin-bottom: 20px;\n\t\tline-height: 20px;\n\t}\n\t.parameter-space-4 {\n\t\tpadding: 2px 10px 10px 10px;\n  \theight: auto;\n\t\tmin-height: 130px;\n\t}\n\ttable.table1 {\n\t\tborder-spacing: 0;\n\t\tborder-collapse: collapse;\n\t}\n\ttable.table2 {\n\t\tborder-spacing: 0;\n\t\tborder-collapse: collapse;\n\t}\n\ttable.table1 th {\n\t\twidth:150px;\n\t\tpadding:5px\n\t}\n\ttable.table1 td {\n\t\twidth:150px;\n\t\tpadding:5px\n\t}\n\t.parameter-text {\n\t\tfont-family: 'Roboto', sans-serif;\n    font-weight: 400;\n\t\tfont-size: 12px;\n\t}\n\t.parameter {\n\t\tcolor: #ff3e00;\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-weight: 1100;\n\t\tfont-size: 14px;\n\t\tfont-style: bold;\n\t}\n\t.parameter-title {\n\t\tfont-family: 'Roboto', sans-serif;\n    font-weight: 1100;\n\t\tfont-size: 14px;\n\t\tfont-style: bold;\n\t\tcolor: rgba(72,72,72,1);\n\t}\n\t.emphasize-text {\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size: 13px;\n\t\tfont-weight:bold;\n\t}\n\tbutton {\n\t\tbackground-color: rgba(221, 221, 221, 0.8);\n\t\tfont-family: 'Roboto', sans-serif;\n\t\ttext-transform: none;\n\t\tfont-size: 12px;\n\t\tdisplay: block;\n\t\tpadding: 0px 30px;\n\t}\n\t.button {\n\t\tmargin-top: 12px;\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size: 12px;\n\t\ttext-transform: none;\n\t\tbackground-color: rgba(221, 221, 221, 0.8);\n\t}\n\t.title {\n\t\tmargin-top: 10px;\n    font-weight: 400;\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tcolor: rgba(72,72,72,1);\n\t}\n\t.wtitle {\n\t\tmargin-top: 25px;\n\t\tmargin-bottom: 10px;\n\t\tfont-weight: 800;\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tcolor: rgba(72,72,72,1);\n\t\tfont-size: 17px;\n\t}\n\t.worldmap-title {\n\t\tmargin-top: 5px;\n\t\tmargin-bottom: 5px;\n\t\tfont-weight: 800;\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tcolor:rgba(72,72,72,1);\n\t\tfont-size: 17px;\n\t}\n\t.lang-link {\n\t\tmargin-top: 10px;\n\t\tfont-family: 'Roboto', sans-serif;\n\t\tfont-size: 14px;\n  \tpadding: 0px 10px;\n\t}\n\ttextarea {\n\t\twidth: 100%;\n\t\theight: 200px;\n\t}\n</style>",
    "<script>\n  // the list of items  the user can select from\n  export let items;\n\n  // field of each item that's used for the labels in the list\n  export let labelFieldName = undefined;\n  export let keywordsFieldName = labelFieldName;\n  export let valueFieldName = undefined;\n\n  export let labelFunction = function(item) {\n    if (item === undefined || item === null) {\n      return \"\";\n    }\n    return labelFieldName ? item[labelFieldName] : item;\n  };\n\n  export let keywordsFunction = function(item) {\n    if (item === undefined || item === null) {\n      return \"\";\n    }\n    return keywordsFieldName ? item[keywordsFieldName] : item;\n  };\n\n  export let valueFunction = function(item) {\n    if (item === undefined || item === null) {\n      return item;\n    }\n    return valueFieldName ? item[valueFieldName] : item;\n  };\n\n  export let keywordsCleanFunction = function(keywords) {\n    return keywords;\n  };\n\n  export let textCleanFunction = function(userEnteredText) {\n    return userEnteredText;\n  };\n\n  export let beforeChange = function(oldSelectedItem, newSelectedItem) {\n    return true;\n  };\n  export let onChange = function(newSelectedItem) {};\n\n  export let selectFirstIfEmpty = false;\n\n  export let minCharactersToSearch = 1;\n  export let maxItemsToShowInList = 0;\n  export let noResultsText = \"No results found\";\n\n  function safeStringFunction(theFunction, argument) {\n    if (typeof theFunction !== \"function\") {\n      console.error(\n        \"Not a function: \" + theFunction + \", argument: \" + argument\n      );\n    }\n    let originalResult;\n    try {\n      originalResult = theFunction(argument);\n    } catch (error) {\n      console.warn(\n        \"Error executing Autocomplete function on value: \" +\n          argument +\n          \" function: \" +\n          theFunction\n      );\n    }\n    let result = originalResult;\n    if (result === undefined || result === null) {\n      result = \"\";\n    }\n    if (typeof result !== \"string\") {\n      result = result.toString();\n    }\n    return result;\n  }\n\n  function safeLabelFunction(item) {\n    // console.log(\"labelFunction: \" + labelFunction);\n    // console.log(\"safeLabelFunction, item: \" + item);\n    return safeStringFunction(labelFunction, item);\n  }\n\n  function safeKeywordsFunction(item) {\n    // console.log(\"safeKeywordsFunction\");\n    const keywords = safeStringFunction(keywordsFunction, item);\n    let result = safeStringFunction(keywordsCleanFunction, keywords);\n    result = result.toLowerCase().trim();\n    if (debug) {\n      console.log(\n        \"Extracted keywords: '\" +\n          result +\n          \"' from item: \" +\n          JSON.stringify(item)\n      );\n    }\n    return result;\n  }\n\n  // the text displayed when no option is selected\n  export let placeholder = undefined;\n  // apply a className to the control\n  export let className = undefined;\n  // generate an HTML input with this name, containing the current value\n  export let name = undefined;\n  // adds the disabled tag to the HTML input\n  export let disabled = false;\n  // add the title to the HTML input\n  export let title = undefined;\n  export let debug = false;\n\n  // selected item state\n  export let selectedItem = undefined;\n  export let value = undefined;\n  let text;\n  let filteredTextLength = 0;\n\n  function onSelectedItemChanged() {\n    value = valueFunction(selectedItem);\n    text = safeLabelFunction(selectedItem);\n    onChange(selectedItem);\n  }\n\n  $: selectedItem, onSelectedItemChanged();\n\n  // HTML elements\n  let input;\n  let list;\n\n  // UI state\n  let opened = false;\n  let highlightIndex = -1;\n\n  // view model\n  let filteredListItems;\n\n  let listItems = [];\n\n  function prepareListItems() {\n    let tStart;\n    if (debug) {\n      tStart = performance.now();\n      console.log(\"prepare items to search\");\n      console.log(\"items: \" + JSON.stringify(items));\n    }\n    const length = items ? items.length : 0;\n    listItems = new Array(length);\n\n    if (length > 0) {\n      items.forEach((item, i) => {\n        listItems[i] = getListItem(item);\n      });\n    }\n\n    if (debug) {\n      const tEnd = performance.now();\n      console.log(\n        listItems.length +\n          \" items to search prepared in \" +\n          (tEnd - tStart) +\n          \" milliseconds\"\n      );\n    }\n  }\n\n  function getListItem(item) {\n    return {\n      // keywords representation of the item\n      keywords: safeKeywordsFunction(item),\n      // item label\n      label: safeLabelFunction(item),\n      // store reference to the origial item\n      item: item\n    };\n  }\n\n  $: items, prepareListItems();\n\n  function prepareUserEnteredText(userEnteredText) {\n    if (userEnteredText === undefined || userEnteredText === null) {\n      return \"\";\n    }\n\n    const textFiltered = userEnteredText\n      .replace(/[&/\\\\#,+()$~%.'\":*?<>{}]/g, \" \")\n      .trim();\n\n    filteredTextLength = textFiltered.length;\n\n    if (minCharactersToSearch > 1) {\n      if (filteredTextLength < minCharactersToSearch) {\n        return \"\";\n      }\n    }\n\n    const cleanUserEnteredText = textCleanFunction(textFiltered);\n    const textFilteredLowerCase = cleanUserEnteredText.toLowerCase().trim();\n\n    if (debug) {\n      console.log(\n        \"Change user entered text '\" +\n          userEnteredText +\n          \"' into '\" +\n          textFilteredLowerCase +\n          \"'\"\n      );\n    }\n    return textFilteredLowerCase;\n  }\n\n  function search() {\n    let tStart;\n    if (debug) {\n      tStart = performance.now();\n      console.log(\"Searching user entered text: '\" + text + \"'\");\n    }\n\n    const textFiltered = prepareUserEnteredText(text);\n\n    if (textFiltered === \"\") {\n      filteredListItems = listItems;\n      closeIfMinCharsToSearchReached();\n      if (debug) {\n        console.log(\n          \"User entered text is empty set the list of items to all items\"\n        );\n      }\n      return;\n    }\n\n    const searchWords = textFiltered.split(\" \");\n\n    let tempfilteredListItems = listItems.filter(listItem => {\n      const itemKeywords = listItem.keywords;\n\n      let matches = 0;\n      searchWords.forEach(searchWord => {\n        if (itemKeywords.includes(searchWord)) {\n          matches++;\n        }\n      });\n\n      return matches >= searchWords.length;\n    });\n\n    const hlfilter = highlightFilter(textFiltered, [\"label\"]);\n    const filteredListItemsHighlighted = tempfilteredListItems.map(hlfilter);\n\n    filteredListItems = filteredListItemsHighlighted;\n    closeIfMinCharsToSearchReached();\n    if (debug) {\n      const tEnd = performance.now();\n      console.log(\n        \"Search took \" +\n          (tEnd - tStart) +\n          \" milliseconds, found \" +\n          filteredListItems.length +\n          \" items\"\n      );\n    }\n  }\n\n  // $: text, search();\n\n  function selectListItem(listItem) {\n    if (debug) {\n      console.log(\"selectListItem\");\n    }\n    const newSelectedItem = listItem.item;\n    if (beforeChange(selectedItem, newSelectedItem)) {\n      selectedItem = newSelectedItem;\n    }\n  }\n\n  function selectItem() {\n    if (debug) {\n      console.log(\"selectItem\");\n    }\n    const listItem = filteredListItems[highlightIndex];\n    selectListItem(listItem);\n    close();\n  }\n\n  function up() {\n    if (debug) {\n      console.log(\"up\");\n    }\n\n    open();\n    if (highlightIndex > 0) highlightIndex--;\n    highlight();\n  }\n\n  function down() {\n    if (debug) {\n      console.log(\"down\");\n    }\n\n    open();\n    if (highlightIndex < filteredListItems.length - 1) highlightIndex++;\n    highlight();\n  }\n\n  function highlight() {\n    if (debug) {\n      console.log(\"highlight\");\n    }\n\n    const query = \".selected\";\n    if (debug) {\n      console.log(\"Seaching DOM element: \" + query + \" in \" + list);\n    }\n    const el = list.querySelector(query);\n    if (el) {\n      if (typeof el.scrollIntoViewIfNeeded === \"function\") {\n        if (debug) {\n          console.log(\"Scrolling selected item into view\");\n        }\n        el.scrollIntoViewIfNeeded();\n      } else {\n        if (debug) {\n          console.warn(\n            \"Could not scroll selected item into view, scrollIntoViewIfNeeded not supported\"\n          );\n        }\n      }\n    } else {\n      if (debug) {\n        console.warn(\"Selected item not found to scroll into view\");\n      }\n    }\n  }\n\n  function onListItemClick(listItem) {\n    if (debug) {\n      console.log(\"onListItemClick\");\n    }\n\n    selectListItem(listItem);\n    close();\n  }\n\n  function onDocumentClick(e) {\n    if (debug) {\n      console.log(\"onDocumentClick: \" + JSON.stringify(e.target));\n    }\n    if (!e.target.closest(\".autocomplete\")) {\n      if (debug) {\n        console.log(\"onDocumentClick outside\");\n      }\n      close();\n    } else {\n      // if (debug) {\n      //   console.log(\"onDocumentClick inside\");\n      // }\n      // resetListToAllItemsAndOpen();\n      highlight();\n    }\n  }\n\n  function onKeyDown(e) {\n    if (debug) {\n      console.log(\"onKeyDown\");\n    }\n\n    let key = e.key;\n    if (key === \"Tab\" && e.shiftKey) key = \"ShiftTab\";\n    const fnmap = {\n      Tab: opened ? down.bind(this) : null,\n      ShiftTab: opened ? up.bind(this) : null,\n      ArrowDown: down.bind(this),\n      ArrowUp: up.bind(this),\n      Escape: onEsc.bind(this)\n    };\n    const fn = fnmap[key];\n    if (typeof fn === \"function\") {\n      e.preventDefault();\n      fn(e);\n    }\n  }\n\n  function onKeyPress(e) {\n    if (debug) {\n      console.log(\"onKeyPress\");\n    }\n\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      selectItem();\n    }\n  }\n\n  function onInput(e) {\n    if (debug) {\n      console.log(\"onInput\");\n    }\n\n    text = e.target.value;\n    search();\n    highlightIndex = 0;\n    open();\n  }\n\n  function onInputClick() {\n    if (debug) {\n      console.log(\"onInputClick\");\n    }\n    resetListToAllItemsAndOpen();\n  }\n\n  function onEsc(e) {\n    if (debug) {\n      console.log(\"onEsc\");\n    }\n\n    //if (text) return clear();\n    e.stopPropagation();\n    if (opened) {\n      input.focus();\n      close();\n    }\n  }\n\n  function onFocus() {\n    if (debug) {\n      console.log(\"onFocus\");\n    }\n\n    resetListToAllItemsAndOpen();\n  }\n\n  function resetListToAllItemsAndOpen() {\n    if (debug) {\n      console.log(\"resetListToAllItemsAndOpen\");\n    }\n\n    filteredListItems = listItems;\n\n    open();\n\n    // find selected item\n    if (selectedItem) {\n      if (debug) {\n        console.log(\n          \"Searching currently selected item: \" + JSON.stringify(selectedItem)\n        );\n      }\n      for (let i = 0; i < listItems.length; i++) {\n        const listItem = listItems[i];\n        if (debug) {\n          console.log(\"Item \" + i + \": \" + JSON.stringify(listItem));\n        }\n        if (selectedItem == listItem.item) {\n          highlightIndex = i;\n          if (debug) {\n            console.log(\n              \"Found selected item: \" + i + \": \" + JSON.stringify(listItem)\n            );\n          }\n          highlight();\n          break;\n        }\n      }\n    }\n  }\n\n  function open() {\n    if (debug) {\n      console.log(\"open\");\n    }\n\n    // check if the search text has more than the min chars required\n    if (isMinCharsToSearchReached()) {\n      return;\n    }\n\n    opened = true;\n  }\n\n  function close() {\n    if (debug) {\n      console.log(\"close\");\n    }\n    opened = false;\n\n    if (!text && selectFirstIfEmpty) {\n      highlightFilter = 0;\n      selectItem();\n    }\n  }\n\n  function isMinCharsToSearchReached() {\n    return (\n      minCharactersToSearch > 1 && filteredTextLength < minCharactersToSearch\n    );\n  }\n\n  function closeIfMinCharsToSearchReached() {\n    if (isMinCharsToSearchReached()) {\n      close();\n    }\n  }\n\n  function clear() {\n    if (debug) {\n      console.log(\"clear\");\n    }\n\n    text = \"\";\n    setTimeout(() => input.focus());\n  }\n\n  function onBlur() {\n    if (debug) {\n      console.log(\"onBlur\");\n    }\n    close();\n  }\n  // 'item number one'.replace(/(it)(.*)(nu)(.*)(one)/ig, '<b>$1</b>$2 <b>$3</b>$4 <b>$5</b>')\n  function highlightFilter(q, fields) {\n    const qs = \"(\" + q.trim().replace(/\\s/g, \")(.*)(\") + \")\";\n    const reg = new RegExp(qs, \"ig\");\n    let n = 1;\n    const len = qs.split(\")(\").length + 1;\n    let repl = \"\";\n    for (; n < len; n++) repl += n % 2 ? `<b>$${n}</b>` : `$${n}`;\n\n    return i => {\n      const newI = Object.assign({ highlighted: {} }, i);\n      if (fields) {\n        fields.forEach(f => {\n          if (!newI[f]) return;\n          newI.highlighted[f] = newI[f].replace(reg, repl);\n        });\n      }\n      return newI;\n    };\n  }\n</script>\n\n<style>\n  .autocomplete {\n    min-width: 200px;\n  }\n  .autocomplete * {\n    box-sizing: border-box;\n  }\n  .autocomplete-input {\n    color: rgba(241, 110, 61, 1); /* parameter */\n    font: inherit;\n    width: 100%;\n    height: 100%;\n    padding: 5px 11px;\n  }\n  .autocomplete-list {\n    background: #fff;\n    position: relative;\n    width: 100%;\n    overflow-y: auto;\n    z-index: 99;\n    padding: 10px 0;\n    top: 0px;\n    border: 1px solid #999;\n    max-height: calc(15 * (1rem + 10px) + 15px);\n    user-select: none;\n  }\n  .autocomplete-list:empty {\n    padding: 0;\n  }\n  .autocomplete-list-item {\n    padding: 5px 15px;\n    color: #333;\n    cursor: pointer;\n    line-height: 1;\n  }\n\n  .autocomplete-list-item:hover,\n  .autocomplete-list-item.selected {\n    background-color: #2e69e2;\n    color: #fff;\n  }\n  .autocomplete-list-item-no-results {\n    padding: 5px 15px;\n    color: #999;\n    line-height: 1;\n  }\n\n  .autocomplete-list.hidden {\n    display: none;\n  }\n</style>\n\n<div class=\"{className} autocomplete select is-fullwidth\">\n  <input\n    type=\"text\"\n    class=\"input autocomplete-input\"\n    {placeholder}\n    {name}\n    {disabled}\n    {title}\n    bind:this={input}\n    bind:value={text}\n    on:input={onInput}\n    on:focus={onFocus}\n    on:keydown={onKeyDown}\n    on:click={onInputClick}\n    on:keypress={onKeyPress} />\n  <div\n    class=\"autocomplete-list {opened ? '' : 'hidden'} is-fullwidth\"\n    bind:this={list}>\n    {#if filteredListItems && filteredListItems.length > 0}\n      {#each filteredListItems as listItem, i}\n        {#if maxItemsToShowInList <= 0 || i < maxItemsToShowInList}\n          <div\n            class=\"autocomplete-list-item {i === highlightIndex ? 'selected' : ''}\"\n            on:click={() => onListItemClick(listItem)}>\n            {#if listItem.highlighted}\n              {@html listItem.highlighted.label}\n            {:else}\n              {@html listItem.label}\n            {/if}\n          </div>\n        {/if}\n      {/each}\n\n      {#if maxItemsToShowInList > 0 && filteredListItems.length > maxItemsToShowInList}\n        <div class=\"autocomplete-list-item-no-results\">\n          ...{filteredListItems.length - maxItemsToShowInList} results not shown\n        </div>\n      {/if}\n    {:else if noResultsText}\n      <div class=\"autocomplete-list-item-no-results\">{noResultsText}</div>\n    {/if}\n  </div>\n</div>\n\n<svelte:window on:click={onDocumentClick} />",
    "<script>\n  import { onMount } from \"svelte\";\n\n  export let items = [];\n  export let activeTabValue;\n\n  onMount(() => {\n    // Set default tab value\n    if (Array.isArray(items) && items.length && items[0].value) {\n      activeTabValue = items[0].value;\n    }\n  });\n\n  const handleClick = tabValue => () => (activeTabValue = tabValue);\n</script>\n\n<div class='container'>\n  <ul>\n    {#if Array.isArray(items)}\n      {#each items as item}\n        <li class={activeTabValue === item.value ? 'active' : ''}>\n          <span on:click={handleClick(item.value)}>{item.label}</span>\n        </li>\n      {/each}\n    {/if}\n  </ul>\n</div>\n\n<style>\n  .container {\n    display: flex;\n    justify-content: center;\n  }\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    padding-left: 0;\n    margin-bottom: 0;\n    list-style: none;\n    /* border-bottom: 1px solid #dee2e6; */\n  }\n\n  span {\n    border: 1px solid gainsboro;\n    background-color: white;\n\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    display: block;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n  }\n\n  span:hover {\n    border-color: #e9ecef #e9ecef #dee2e6;\n  }\n\n  li.active > span {\n    color: #df595d;\n    background-color: #fff;\n    border-color: #dee2e6 #dee2e6 #fff;\n  }\n</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n\n  export let items = [];\n  export let activeTabValue;\n\n  onMount(() => {\n    // Set default tab value\n    if (Array.isArray(items) && items.length && items[0].value) {\n      activeTabValue = items[0].value;\n    }\n  });\n\n  const handleClick = tabValue => () => (activeTabValue = tabValue);\n</script>\n\n<ul>\n  {#if Array.isArray(items)}\n    {#each items as item}\n      <li class={activeTabValue === item.value ? 'active' : ''}>\n        <span on:click={handleClick(item.value)}>{item.label}</span>\n      </li>\n    {/each}\n  {/if}\n</ul>\n\n<style>\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    padding-left: 0;\n    margin-bottom: 0;\n    list-style: none;\n    /* border-bottom: 1px solid #dee2e6; */\n  }\n\n  span {\n    border: 1px solid grey;\n    background-color: gainsboro;\n\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    display: block;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n  }\n\n  span:hover {\n    border-color: #e9ecef #e9ecef #dee2e6;\n  }\n\n  li.active > span {\n    color: #df595d;\n    background-color: #fff;\n    border-color: #dee2e6 #dee2e6 #fff;\n  }\n</style>\n",
    "<script>\n\timport { afterUpdate } from 'svelte';\n\n\timport { loadAndProcessData } from './loadAndProcessData';\n\timport { choroplethMap } from './choroplethMap';\n\timport { colorLegend } from './colorLegend';\n\n\texport let selectedRisk = 0;\n\n\t// selectedColorValue,\n\t// handleMouseOver,\n\t// handleMouseOut\n\t\t\n\tlet svg;\n\n\tlet svgWidth = 960;\n\tlet svgHeight = 500;\n\n\t// domain and range arrays\n\tlet incomeColors = ['rgb(208,28,139)','rgb(241,182,218)','rgb(184,225,134)',\n\t\t'rgb(77,172,38)','darkgrey'];\n\tlet incomeLegend = ['No data', '4. High income', '3. Upper middle income',\n\t\t\t\t\t\t\t\t\t\t\t'2. Lower middle income', '1. Low income'].reverse();\n\n\tlet propsColors = ['rgb(166,97,26)','rgb(223,194,125)','rgb(128,205,193)',\n\t\t'rgb(1,133,113)','darkgrey'];\n\tlet propsLegend = ['No data', '<5%', '5- 10%', '10- 20%', '>20%'].reverse();\n\n\tafterUpdate(() => {\n\t\tsvg = d3.select('svg.worldmap');\n\n\t\t// choropleth map\n\t\tlet g = svg.selectAll('g').data([null]);\n\t\tg = g.enter().append('g')\n\t\t  .merge(g);\n\n\t\t// update legend on each property switch\n\t\tlet legend = svg.selectAll('g.legend').data([null]);\n\t\tlegend = legend.enter()\n\t\t\t.append('g')\n\t\t\t.attr('class', 'legend')\n\t\t  .merge(legend)\n\t\t    .attr('transform', `translate(40, 310)`);\n\n\t\tconst colorScale = d3.scaleOrdinal();\n\t\tlet colorValue; // strange to send null to choroplethMap\n\n\t\tlet selectedColorValue;\n\t\tlet features;\n\n\t\tfunction handleMouseOver(d, i) {\n\t\t \tselectedColorValue = d;\n\t\t \trender();\n\t\t};\n\n\t\tfunction handleMouseOut(d, i) {\n\t\t\tselectedColorValue = null;\n\t\t\trender();\n\t\t}\n\n\t\tloadAndProcessData().then(countries => {\n\t\t\tfeatures = countries.features;\n\t\t\trender();\n\t\t});\n\n\t\tfunction render() {\n\t\t\tswitch (selectedRisk) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcolorValue = d => d.properties.prop;\n\t\t\t\t\tcolorScale\n\t\t\t\t\t\t.domain(propsLegend)\n\t\t\t\t\t\t.range(propsColors);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcolorValue = d => d.properties.income_grp;\n\t\t\t\t\tcolorScale\n\t\t\t\t\t\t.domain(incomeLegend)\n\t\t\t\t\t\t.range(incomeColors);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tg.call(choroplethMap, {\n\t\t\t\tfeatures,\n\t\t\t\tcolorScale,\n\t\t\t\tcolorValue,\n\t\t\t\tselectedColorValue,\n\t\t\t});\n\n\t\t\tlegend.call(colorLegend, {\n\t\t\t\tcolorScale,\n\t\t\t\tcircleRadius: 8,\n\t\t\t\tspacing: 20,\n\t\t\t\ttextOffset: 12,\n\t\t\t\tbackgroundRectWidth: 235,\n\t\t\t\tselectedColorValue,\n  \t\t\thandleMouseOver,\n  \t\t\thandleMouseOut\n\t\t\t});\n\t\t}\n\t});\n</script>\n\n\n<div class='center'>\n\t<svg\n\t\tclass='worldmap'\n\t\twidth='{svgWidth}'\n\t\theight='{svgHeight}'>\n\n\t\t<style>\n\t\t\t.sphere {\n\t\t\t\t/* fill: #0077be; */\n\t\t\t\tfill: rgba(189,215,231 ,1);\n\t\t\t\topacity: 0.1;\n\t\t\t}\n\t\t\t.country {\n\t\t\t\tstroke: black;\n\t\t\t\tstroke-width: 0.05px;\n\t\t\t}\n\t\t\t.country:hover {\n\t\t\t\topacity: 1;\n        stroke: black;\n        stroke-width: 1px;\n        fill: rgba(228,26,28, 1);\n\t\t\t}\n\t\t\t.tick text {\n\t\t\t\tfont-size: .9em;\n\t\t\t\tfill: #635F5D;\n\t\t\t\tfont-family: sans-serif;\n\t\t\t}\n\t\t\t.tick {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.tick circle {\n\t\t\t\tstroke: black;\n\t\t\t\tstroke-opacity: 0.5;\n\t\t\t}\n\t\t</style>\n\t</svg>\n</div>\n\n\n<style>\n\t.center {\n\t\ttext-align: center;\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}